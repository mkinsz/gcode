# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Article {
  id: ID!
  name: String!
}

input ArticleInput {
  name: String!
}

type User {
  id: ID!
  email: String!
  userId: String
  name: String
  firstName: String
  lastName: String
  nickName: String
  description: String
  location: String
  createdAt: Time!
  updatedAt: Time
  password: String
}

input UserInput {
  email: String
  userId: String
  displayName: String
  name: String
  firstName: String
  lastName: String
  nickName: String
  description: String
  location: String
  password: String!
}

input UserAuth {
  email: String!
  password: String!
}

# List Types
type Users {
  count: Int # You want to return count for a grid for example
  list: [User!]! # that is why we need to specify the users object this way
}

type Query {
  auth(input: UserAuth!): Boolean!
  users(id: ID): Users!
  articles: [Article!]
  article(id: ID!): Article
}

type Mutation {
  createUser(input: UserInput!): User!
  updateUser(id: ID!, input: UserInput!): User!
  deleteUser(id: ID!): Boolean!
  createArticles(input: [ArticleInput!]): [Article!]
}

#Scalars
scalar Time

# Any maps to interface{}
scalar Any